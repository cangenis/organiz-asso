{"ast":null,"code":"var _jsxFileName = \"/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/FeedPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/AuthContext\"; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const {\n    user,\n    token\n  } = useAuth(); // Assuming you need a token to fetch the posts\n  console.log(user);\n  console.log(token);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/posts\", {\n          headers: {\n            Authorization: `Bearer ${token}` // Include the token in the Authorization header\n          }\n        });\n        setPosts(response.data); // Assuming the response data is the array of posts\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [token]); // Depend on token to re-fetch if it changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\",\n        border: \"1px solid #ccc\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: `${post.firstName} ${post.lastName} - ${post.location}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: new Date(post.createdAt).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedPage, \"tl/XCpAKdZzZUQVoMoUbMTP4peE=\", false, function () {\n  return [useAuth];\n});\n_c = FeedPage;\nexport default FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","jsxDEV","_jsxDEV","FeedPage","_s","posts","setPosts","user","token","console","log","fetchPosts","response","get","headers","Authorization","data","error","children","map","post","style","marginBottom","border","padding","firstName","lastName","location","fileName","_jsxFileName","lineNumber","columnNumber","content","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useAuth } from \"../context/AuthContext\"; // Adjust the path as needed\n\nconst FeedPage = () => {\n  const [posts, setPosts] = useState([]);\n  const { user, token } = useAuth(); // Assuming you need a token to fetch the posts\n  console.log(user);\n  console.log(token);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/posts\", {\n          headers: {\n            Authorization: `Bearer ${token}`, // Include the token in the Authorization header\n          },\n        });\n        setPosts(response.data); // Assuming the response data is the array of posts\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, [token]); // Depend on token to re-fetch if it changes\n\n  return (\n    <div>\n      {posts.map((post) => (\n        <div\n          key={post._id}\n          style={{\n            marginBottom: \"20px\",\n            border: \"1px solid #ccc\",\n            padding: \"10px\",\n          }}\n        >\n          <h4>{`${post.firstName} ${post.lastName} - ${post.location}`}</h4>\n          <p>{post.content}</p>\n          <small>{new Date(post.createdAt).toLocaleString()}</small>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEU,IAAI;IAAEC;EAAM,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;EACnCS,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjBE,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElBV,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,EAAE;UAC9DC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASP,KAAM,EAAC,CAAE;UACpC;QACF,CAAC,CAAC;QACFF,QAAQ,CAACM,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACEN,OAAA;IAAAgB,QAAA,EACGb,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdlB,OAAA;MAEEmB,KAAK,EAAE;QACLC,YAAY,EAAE,MAAM;QACpBC,MAAM,EAAE,gBAAgB;QACxBC,OAAO,EAAE;MACX,CAAE;MAAAN,QAAA,gBAEFhB,OAAA;QAAAgB,QAAA,EAAM,GAAEE,IAAI,CAACK,SAAU,IAAGL,IAAI,CAACM,QAAS,MAAKN,IAAI,CAACO,QAAS;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClE7B,OAAA;QAAAgB,QAAA,EAAIE,IAAI,CAACY;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB7B,OAAA;QAAAgB,QAAA,EAAQ,IAAIe,IAAI,CAACb,IAAI,CAACc,SAAS,CAAC,CAACC,cAAc,CAAC;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GATrDX,IAAI,CAACgB,GAAG;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzCID,QAAQ;EAAA,QAEYH,OAAO;AAAA;AAAAqC,EAAA,GAF3BlC,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}