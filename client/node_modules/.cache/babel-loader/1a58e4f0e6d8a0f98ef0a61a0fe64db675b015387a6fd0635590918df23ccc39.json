{"ast":null,"code":"var _jsxFileName = \"/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { createPostRoute, getUsersPostsRoute, getUserRoute } from \"../utils/APIRoutes\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/ProfilePage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Profile() {\n  _s();\n  const {\n    userId: profileUserId\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [profileUser, setProfileUser] = useState({});\n  const {\n    user,\n    token\n  } = useAuth();\n  const handlePostSubmit = async event => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // prevent empty posts\n    try {\n      const postData = {\n        userId: profileUserId,\n        content: postContent\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts([response.data, ...posts]); // prepend new post to the list\n      setPostContent(\"\"); // clear input field\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  const fetchProfile = async () => {\n    try {\n      const response = await axios.get(`${getUserRoute}/${profileUserId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setProfileUser(response.data);\n    } catch (error) {\n      console.error(\"Error fetching profile:\", error);\n    }\n  };\n  const fetchUsersPosts = async () => {\n    try {\n      const response = await axios.get(`${getUsersPostsRoute}/${profileUserId}/posts`, {\n        headers: {\n          Authorization: `Bearer ${token}` // Include the token in the Authorization header\n        }\n      });\n      setPosts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const response = await axios.get(`${getUserRoute}/${profileUserId}/friends`);\n        setFriends(response.data); // assuming the API returns an array of friends\n      } catch (error) {\n        console.error(\"Failed to fetch friends:\", error);\n      }\n    };\n    fetchFriends();\n  }, [userId]);\n  useEffect(() => {\n    fetchProfile();\n    fetchUsersPosts();\n  }, [profileUserId, token]); // Depend on profileUserId and token to re-fetch if they change\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Organiz'Asso Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), \" \", profileUser.firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Surname:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), \" \", profileUser.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), \" \", profileUser.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), \" \", profileUser.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Occupation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), \" \", profileUser.occupation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), user._id === profileUserId && /*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${profileUserId}/friends`,\n          className: \"friends-button\",\n          children: \"Friends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), user._id === profileUserId && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"post-form\",\n        onSubmit: handlePostSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"input-field\",\n          placeholder: \"What's on your mind?\",\n          value: postContent,\n          onChange: e => setPostContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-author\",\n            children: `${post.firstName} ${post.lastName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-location\",\n            children: post.location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-content\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"post-date\",\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Profile, \"iP0xjaOJdG0fPVwYC2/2YRnKJso=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","useParams","createPostRoute","getUsersPostsRoute","getUserRoute","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userId","profileUserId","posts","setPosts","friends","setFriends","postContent","setPostContent","profileUser","setProfileUser","user","token","handlePostSubmit","event","preventDefault","trim","postData","content","response","post","headers","Authorization","data","error","console","fetchProfile","get","fetchUsersPosts","fetchFriends","children","className","fileName","_jsxFileName","lineNumber","columnNumber","firstName","lastName","email","location","occupation","_id","to","onSubmit","placeholder","value","onChange","e","target","type","map","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/ProfilePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../context/AuthContext\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  createPostRoute,\n  getUsersPostsRoute,\n  getUserRoute,\n} from \"../utils/APIRoutes\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/ProfilePage.css\";\n\nfunction Profile() {\n  const { userId: profileUserId } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [friends, setFriends] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [profileUser, setProfileUser] = useState({});\n  const { user, token } = useAuth();\n\n  const handlePostSubmit = async (event) => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // prevent empty posts\n    try {\n      const postData = {\n        userId: profileUserId,\n        content: postContent,\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setPosts([response.data, ...posts]); // prepend new post to the list\n      setPostContent(\"\"); // clear input field\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  const fetchProfile = async () => {\n    try {\n      const response = await axios.get(`${getUserRoute}/${profileUserId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setProfileUser(response.data);\n    } catch (error) {\n      console.error(\"Error fetching profile:\", error);\n    }\n  };\n\n  const fetchUsersPosts = async () => {\n    try {\n      const response = await axios.get(\n        `${getUsersPostsRoute}/${profileUserId}/posts`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`, // Include the token in the Authorization header\n          },\n        }\n      );\n      setPosts(response.data);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchFriends = async () => {\n      try {\n        const response = await axios.get(\n          `${getUserRoute}/${profileUserId}/friends`\n        );\n        setFriends(response.data); // assuming the API returns an array of friends\n      } catch (error) {\n        console.error(\"Failed to fetch friends:\", error);\n      }\n    };\n\n    fetchFriends();\n  }, [userId]);\n\n  useEffect(() => {\n    fetchProfile();\n    fetchUsersPosts();\n  }, [profileUserId, token]); // Depend on profileUserId and token to re-fetch if they change\n\n  return (\n    <>\n      <div className=\"feed-container\">\n        <div className=\"profile-section\">\n          <h1>Organiz'Asso Profile</h1>\n          <p>\n            <strong>Name:</strong> {profileUser.firstName}\n          </p>\n          <p>\n            <strong>Surname:</strong> {profileUser.lastName}\n          </p>\n          <p>\n            <strong>Email:</strong> {profileUser.email}\n          </p>\n          <p>\n            <strong>Location:</strong> {profileUser.location}\n          </p>\n          <p>\n            <strong>Occupation:</strong> {profileUser.occupation}\n          </p>\n          {user._id === profileUserId && (\n            <Link\n              to={`/profile/${profileUserId}/friends`}\n              className=\"friends-button\"\n            >\n              Friends\n            </Link>\n          )}\n        </div>\n\n        {user._id === profileUserId && (\n          <form className=\"post-form\" onSubmit={handlePostSubmit}>\n            <textarea\n              className=\"input-field\"\n              placeholder=\"What's on your mind?\"\n              value={postContent}\n              onChange={(e) => setPostContent(e.target.value)}\n            ></textarea>\n            <button type=\"submit\" className=\"submit-button\">\n              Post\n            </button>\n          </form>\n        )}\n\n        <h1>Posts</h1>\n        {posts.map((post) => (\n          <div key={post._id} className=\"post-card\">\n            <div className=\"post-header\">\n              <span className=\"post-author\">{`${post.firstName} ${post.lastName}`}</span>\n              <span className=\"post-location\">{post.location}</span>\n            </div>\n            <p className=\"post-content\">{post.content}</p>\n            <small className=\"post-date\">\n              {new Date(post.createdAt).toLocaleString()}\n            </small>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}