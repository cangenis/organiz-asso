{"ast":null,"code":"var _jsxFileName = \"/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/FeedPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getFeedPostsRoute, createPostRoute } from \"../utils/APIRoutes\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Post from \"../components/Post\"; // Make sure the path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\"); // To manage the content of the new post\n  const {\n    user,\n    token\n  } = useAuth();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(getFeedPostsRoute, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, [token]); // Fetch posts whenever the token changes\n\n  const handlePostSubmit = async event => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // prevent empty posts\n    try {\n      const postData = {\n        userId: user._id,\n        // Assume user._id is available from the auth context\n        content: postContent\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts([response.data, ...posts]); // Add the new post to the top of the list\n      setPostContent(\"\"); // Clear the input after successful post creation\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  const removePostFromState = postId => {\n    setPosts(prevPosts => prevPosts.filter(post => post._id !== postId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-field\",\n        placeholder: \"What's on your mind?\",\n        value: postContent,\n        onChange: e => setPostContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      postData: post,\n      removePost: removePostFromState\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedPage, \"KXHZN876pwsg9f94hdNu3uK/5nY=\", false, function () {\n  return [useAuth];\n});\n_c = FeedPage;\nexport default FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","getFeedPostsRoute","createPostRoute","useAuth","Post","jsxDEV","_jsxDEV","FeedPage","_s","posts","setPosts","postContent","setPostContent","user","token","fetchPosts","response","get","headers","Authorization","data","error","console","handlePostSubmit","event","preventDefault","trim","postData","userId","_id","content","post","removePostFromState","postId","prevPosts","filter","className","children","onSubmit","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","map","removePost","_c","$RefreshReg$"],"sources":["/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getFeedPostsRoute, createPostRoute } from \"../utils/APIRoutes\";\nimport { useAuth } from \"../context/AuthContext\";\nimport Post from \"../components/Post\"; // Make sure the path is correct\n\nconst FeedPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\"); // To manage the content of the new post\n  const { user, token } = useAuth();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(getFeedPostsRoute, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setPosts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n\n    fetchPosts();\n  }, [token]); // Fetch posts whenever the token changes\n\n  const handlePostSubmit = async (event) => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // prevent empty posts\n    try {\n      const postData = {\n        userId: user._id, // Assume user._id is available from the auth context\n        content: postContent,\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setPosts([response.data, ...posts]); // Add the new post to the top of the list\n      setPostContent(\"\"); // Clear the input after successful post creation\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  const removePostFromState = (postId) => {\n    setPosts((prevPosts) => prevPosts.filter((post) => post._id !== postId));\n  };\n\n  return (\n    <div className=\"feed-container\">\n      <form className=\"post-form\" onSubmit={handlePostSubmit}>\n        <textarea\n          className=\"input-field\"\n          placeholder=\"What's on your mind?\"\n          value={postContent}\n          onChange={(e) => setPostContent(e.target.value)}\n        ></textarea>\n        <button type=\"submit\" className=\"submit-button\">\n          Post\n        </button>\n      </form>\n      {posts.map((post) => (\n        <Post key={post._id} postData={post} removePost={removePostFromState} />\n      ))}\n    </div>\n  );\n};\n\nexport default FeedPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}