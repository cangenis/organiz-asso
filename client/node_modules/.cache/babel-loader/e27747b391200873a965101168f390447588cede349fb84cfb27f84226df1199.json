{"ast":null,"code":"var _jsxFileName = \"/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/FeedPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getFeedPostsRoute, createPostRoute, getUserRoute, likePostRoute, addCommentRoute } from \"../utils/APIRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/FeedPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [commentData, setCommentData] = useState({});\n  const {\n    user,\n    userId,\n    token\n  } = useAuth();\n  console.log(user);\n  console.log(token);\n  const handleAddRemoveFriend = async friendId => {\n    try {\n      const result = await axios.patch(`${getUserRoute}/${user._id}/${friendId}`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const {\n        friendsList,\n        isAdded\n      } = result.data;\n      if (isAdded) {\n        console.log(\"Friend added\");\n      } else {\n        console.log(\"Friend removed\");\n      }\n    } catch (error) {\n      console.error(\"Error changing friendship status:\", error);\n    }\n  };\n  const handlePostSubmit = async event => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // prevent empty posts\n    try {\n      const postData = {\n        userId: user._id,\n        content: postContent\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPosts([response.data, ...posts]); // prepend new post to the list\n      setPostContent(\"\"); // clear input field\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(getFeedPostsRoute, {\n        headers: {\n          Authorization: `Bearer ${token}` // Include the token in the Authorization header\n        }\n      });\n      const postsWithFriendStatus = response.data.map(post => ({\n        ...post,\n        isFriend: false // Default to not friends; adjust based on your actual data setup\n      }));\n      setPosts(postsWithFriendStatus);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n  const handleCommentSubmit = async (postId, commentText) => {\n    if (!commentText.trim()) return; // prevent empty comments\n    try {\n      const response = await axios.patch(`${addCommentRoute}/${postId}/comment`, {\n        userId: userId,\n        content: commentText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedPosts = posts.map(post => post._id === postId ? {\n        ...post,\n        comments: [...post.comments, response.data]\n      } : post);\n      setPosts(updatedPosts);\n      setCommentData({\n        ...commentData,\n        [postId]: \"\"\n      }); // Reset the comment input field for that post\n    } catch (error) {\n      console.error(\"Error submitting comment:\", error);\n    }\n  };\n  const handleLikePost = async postId => {\n    try {\n      const response = await axios.patch(`${likePostRoute}/${postId}/like`, {\n        userId: user._id\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedPosts = posts.map(post => post._id === postId ? {\n        ...post,\n        likes: response.data.likes\n      } : post);\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, [token, setPosts]); // Depend on token to re-fetch if it changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post-form\",\n      onSubmit: handlePostSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-field\",\n        placeholder: \"What's on your mind?\",\n        value: postContent,\n        onChange: e => setPostContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/profile/${post.userId}`,\n          className: \"post-author\",\n          children: `${post.firstName} ${post.lastName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleLikePost(post._id),\n          className: \"like-button\",\n          children: [\"Like (\", Object.keys(post.likes || {}).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), user._id !== post.userId && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddRemoveFriend(post.userId),\n          className: \"friend-button\",\n          children: \"Add/Remove Friend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"post-content\",\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"post-location\",\n        children: post.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"post-date\",\n        children: new Date(post.createdAt).toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-section\",\n        children: post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.userId}`,\n              className: \"post-author\",\n              children: `${comment.firstName} ${comment.lastName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), comment.firstName, \" \", comment.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), \": \", comment.content]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment...\",\n          value: commentData[post._id] || \"\",\n          onChange: e => setCommentData({\n            ...commentData,\n            [post._id]: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentSubmit(post._id, commentData[post._id]),\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedPage, \"7IUWT0t69yMJzP4VNh6G+nDwVvk=\", false, function () {\n  return [useAuth];\n});\n_c = FeedPage;\nexport default FeedPage;\nvar _c;\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","getFeedPostsRoute","createPostRoute","getUserRoute","likePostRoute","addCommentRoute","Link","useAuth","jsxDEV","_jsxDEV","FeedPage","_s","posts","setPosts","postContent","setPostContent","commentData","setCommentData","user","userId","token","console","log","handleAddRemoveFriend","friendId","result","patch","_id","headers","Authorization","friendsList","isAdded","data","error","handlePostSubmit","event","preventDefault","trim","postData","content","response","post","fetchPosts","get","postsWithFriendStatus","map","isFriend","handleCommentSubmit","postId","commentText","updatedPosts","comments","handleLikePost","likes","className","children","onSubmit","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","to","firstName","lastName","onClick","Object","keys","length","location","Date","createdAt","toLocaleString","comment","_c","$RefreshReg$"],"sources":["/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/FeedPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  getFeedPostsRoute,\n  createPostRoute,\n  getUserRoute,\n  likePostRoute,\n  addCommentRoute,\n} from \"../utils/APIRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/FeedPage.css\";\n\nconst FeedPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [postContent, setPostContent] = useState(\"\");\n  const [commentData, setCommentData] = useState({});\n  const { user, userId, token } = useAuth();\n  console.log(user);\n  console.log(token);\n\n  const handleAddRemoveFriend = async (friendId) => {\n    try {\n      const result = await axios.patch(\n        `${getUserRoute}/${user._id}/${friendId}`,\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      const { friendsList, isAdded } = result.data;\n      if (isAdded) {\n        console.log(\"Friend added\");\n      } else {\n        console.log(\"Friend removed\");\n      }\n    } catch (error) {\n      console.error(\"Error changing friendship status:\", error);\n    }\n  };\n\n  const handlePostSubmit = async (event) => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // prevent empty posts\n    try {\n      const postData = {\n        userId: user._id,\n        content: postContent,\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setPosts([response.data, ...posts]); // prepend new post to the list\n      setPostContent(\"\"); // clear input field\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  const fetchPosts = async () => {\n    try {\n      const response = await axios.get(getFeedPostsRoute, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Include the token in the Authorization header\n        },\n      });\n      const postsWithFriendStatus = response.data.map((post) => ({\n        ...post,\n        isFriend: false, // Default to not friends; adjust based on your actual data setup\n      }));\n      setPosts(postsWithFriendStatus);\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n\n  const handleCommentSubmit = async (postId, commentText) => {\n    if (!commentText.trim()) return; // prevent empty comments\n    try {\n      const response = await axios.patch(\n        `${addCommentRoute}/${postId}/comment`,\n        {\n          userId: userId,\n          content: commentText,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      const updatedPosts = posts.map((post) =>\n        post._id === postId\n          ? { ...post, comments: [...post.comments, response.data] }\n          : post\n      );\n      setPosts(updatedPosts);\n      setCommentData({ ...commentData, [postId]: \"\" }); // Reset the comment input field for that post\n    } catch (error) {\n      console.error(\"Error submitting comment:\", error);\n    }\n  };\n\n  const handleLikePost = async (postId) => {\n    try {\n      const response = await axios.patch(\n        `${likePostRoute}/${postId}/like`,\n        { userId: user._id },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      const updatedPosts = posts.map((post) =>\n        post._id === postId ? { ...post, likes: response.data.likes } : post\n      );\n      setPosts(updatedPosts);\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, [token, setPosts]); // Depend on token to re-fetch if it changes\n\n  return (\n    <div className=\"feed-container\">\n      <form className=\"post-form\" onSubmit={handlePostSubmit}>\n        <textarea\n          className=\"input-field\"\n          placeholder=\"What's on your mind?\"\n          value={postContent}\n          onChange={(e) => setPostContent(e.target.value)}\n        ></textarea>\n        <button type=\"submit\" className=\"submit-button\">\n          Post\n        </button>\n      </form>\n      {posts.map((post) => (\n        <div key={post._id} className=\"post-card\">\n          <div className=\"post-header\">\n            <Link to={`/profile/${post.userId}`} className=\"post-author\">\n              {`${post.firstName} ${post.lastName}`}\n            </Link>\n            <button\n              onClick={() => handleLikePost(post._id)}\n              className=\"like-button\"\n            >\n              Like ({Object.keys(post.likes || {}).length})\n            </button>\n            {user._id !== post.userId && (\n              <button\n                onClick={() => handleAddRemoveFriend(post.userId)}\n                className=\"friend-button\"\n              >\n                Add/Remove Friend\n              </button>\n            )}\n          </div>\n          <p className=\"post-content\">{post.content}</p>\n          <small className=\"post-location\">{post.location}</small>\n          <small className=\"post-date\">\n            {new Date(post.createdAt).toLocaleString()}\n          </small>\n          <div className=\"comments-section\">\n            {post.comments.map((comment) => (\n              <div key={comment._id} className=\"comment\">\n                <strong>\n                  <Link to={`/profile/${post.userId}`} className=\"post-author\">\n                    {`${comment.firstName} ${comment.lastName}`}\n                  </Link>\n                  {comment.firstName} {comment.lastName}\n                </strong>\n                : {comment.content}\n              </div>\n            ))}\n          </div>\n          <div className=\"comment-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Add a comment...\"\n              value={commentData[post._id] || \"\"}\n              onChange={(e) =>\n                setCommentData({ ...commentData, [post._id]: e.target.value })\n              }\n            />\n            <button\n              onClick={() =>\n                handleCommentSubmit(post._id, commentData[post._id])\n              }\n            >\n              Comment\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}