{"ast":null,"code":"var _jsxFileName = \"/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"../state/index\";\nimport { loginRoute } from \"../utils/APIRoutes\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\"\n  };\n  const [message, setMessage] = useState(\"\");\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  // Checking if already authenticated\n  /*useEffect(() => {\n    if (user) {\n      navigate(\"/\"); // Navigate to the home page if already logged in\n    }\n  }, [user, navigate]);*/\n\n  const handleChange = event => {\n    setCredentials({\n      ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n  const validateForm = () => {\n    const {\n      email,\n      password\n    } = credentials;\n    if (email === \"\" || password === \"\") {\n      //toast.error(\"Email and password are required.\", toastOptions);\n      setMessage(\"Email and password are required.\");\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (validateForm()) {\n      try {\n        await login(credentials.email, credentials.password);\n        navigate(\"/\"); // Redirect user after successful login\n      } catch (error) {\n        /*toast.error(\n          \"Login failed. Please check your credentials.\",\n          toastOptions\n        );*/\n        setMessage(\"Login failed. Please check your credentials.\");\n        console.error(\"Login failed:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: credentials.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: credentials.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Join us!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginPage, \"I5HTVUfCb7cou8SEHV2lVffZgqA=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","axios","useState","useNavigate","Link","useAuth","loginRoute","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","navigate","toastOptions","position","autoClose","pauseOnHover","draggable","theme","message","setMessage","credentials","setCredentials","email","password","handleChange","event","target","name","value","validateForm","handleSubmit","preventDefault","login","error","console","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/cangenis/projet-web-genis-ozgenc/client/src/pages/LoginPage.jsx"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useAuth } from \"../state/index\";\nimport { loginRoute } from \"../utils/APIRoutes\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 8000,\n    pauseOnHover: true,\n    draggable: true,\n    theme: \"dark\",\n  };\n\n  const [message, setMessage] = useState(\"\");\n\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  // Checking if already authenticated\n  /*useEffect(() => {\n    if (user) {\n      navigate(\"/\"); // Navigate to the home page if already logged in\n    }\n  }, [user, navigate]);*/\n\n  const handleChange = (event) => {\n    setCredentials({\n      ...credentials,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const validateForm = () => {\n    const { email, password } = credentials;\n    if (email === \"\" || password === \"\") {\n      //toast.error(\"Email and password are required.\", toastOptions);\n      setMessage(\"Email and password are required.\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (validateForm()) {\n      try {\n        await login(credentials.email, credentials.password);\n        navigate(\"/\"); // Redirect user after successful login\n      } catch (error) {\n        /*toast.error(\n          \"Login failed. Please check your credentials.\",\n          toastOptions\n        );*/\n        setMessage(\"Login failed. Please check your credentials.\");\n        console.error(\"Login failed:\", error);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={credentials.email}\n          onChange={handleChange}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={credentials.password}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Login</button>\n        <span>\n          Don't have an account? <Link to=\"/register\">Join us!</Link>\n        </span>\n      </form>\n      <p>{message}</p>\n    </>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}