{"ast":null,"code":"var _jsxFileName = \"/Users/cangenis/projet-web-genis-ozgenc/client/src/components/NewPost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { createPostRoute } from \"../utils/APIRoutes\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/NewPost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPost({\n  onPostSuccess\n}) {\n  _s();\n  const [postContent, setPostContent] = useState(\"\");\n  const {\n    user,\n    token\n  } = useAuth();\n  const handlePostSubmit = async event => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // Prevent empty posts\n    try {\n      const postData = {\n        userId: user._id,\n        content: postContent\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      onPostSuccess(response.data); // Invoke the callback with the new post\n      setPostContent(\"\"); // Clear the input after successful post creation\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"post-form\",\n    onSubmit: handlePostSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"input-field\",\n      placeholder: \"What's on your mind?\",\n      value: postContent,\n      onChange: e => setPostContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-button\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPost, \"XKtot5xy6pwqK6ZZnPR51hS61Lc=\", false, function () {\n  return [useAuth];\n});\n_c = NewPost;\nexport default NewPost;\nvar _c;\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"names":["React","useState","axios","createPostRoute","useAuth","jsxDEV","_jsxDEV","NewPost","onPostSuccess","_s","postContent","setPostContent","user","token","handlePostSubmit","event","preventDefault","trim","postData","userId","_id","content","response","post","headers","Authorization","data","error","console","className","onSubmit","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/cangenis/projet-web-genis-ozgenc/client/src/components/NewPost.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { createPostRoute } from \"../utils/APIRoutes\";\nimport { useAuth } from \"../context/AuthContext\";\nimport \"../styles/NewPost.css\";\n\nfunction NewPost({ onPostSuccess }) {\n  const [postContent, setPostContent] = useState(\"\");\n  const { user, token } = useAuth();\n\n  const handlePostSubmit = async (event) => {\n    event.preventDefault();\n    if (!postContent.trim()) return; // Prevent empty posts\n    try {\n      const postData = {\n        userId: user._id,\n        content: postContent,\n      };\n      const response = await axios.post(createPostRoute, postData, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      onPostSuccess(response.data); // Invoke the callback with the new post\n      setPostContent(\"\"); // Clear the input after successful post creation\n    } catch (error) {\n      console.error(\"Error creating post:\", error);\n    }\n  };\n\n  return (\n    <form className=\"post-form\" onSubmit={handlePostSubmit}>\n      <textarea\n        className=\"input-field\"\n        placeholder=\"What's on your mind?\"\n        value={postContent}\n        onChange={(e) => setPostContent(e.target.value)}\n      ></textarea>\n      <button type=\"submit\" className=\"submit-button\">\n        Post\n      </button>\n    </form>\n  );\n}\n\nexport default NewPost;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,OAAOA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM;IAAEW,IAAI;IAAEC;EAAM,CAAC,GAAGT,OAAO,CAAC,CAAC;EAEjC,MAAMU,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAACN,WAAW,CAACO,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG;QACfC,MAAM,EAAEP,IAAI,CAACQ,GAAG;QAChBC,OAAO,EAAEX;MACX,CAAC;MACD,MAAMY,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAACpB,eAAe,EAAEe,QAAQ,EAAE;QAC3DM,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASZ,KAAM;QAAE;MAC9C,CAAC,CAAC;MACFL,aAAa,CAACc,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC9Bf,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACErB,OAAA;IAAMuB,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEhB,gBAAiB;IAAAiB,QAAA,gBACrDzB,OAAA;MACEuB,SAAS,EAAC,aAAa;MACvBG,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAEvB,WAAY;MACnBwB,QAAQ,EAAGC,CAAC,IAAKxB,cAAc,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACZlC,OAAA;MAAQmC,IAAI,EAAC,QAAQ;MAACZ,SAAS,EAAC,eAAe;MAAAE,QAAA,EAAC;IAEhD;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAAC/B,EAAA,CAnCQF,OAAO;EAAA,QAEUH,OAAO;AAAA;AAAAsC,EAAA,GAFxBnC,OAAO;AAqChB,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}